= semantic_nested_form_for @ticket, html: {multipart: true} do |f|
  - if @ticket.errors.any?
    #error_explanation
      %h2= "#{pluralize(@ticket.errors.count, "error")} prohibited this ticket from being saved:"
      %ul
        - @ticket.errors.full_messages.each do |msg|
          %li= msg
  .row
    .small-10.medium-6.columns
      = f.input :project, as: :select, collection: current_user.has_role?(:admin) ? Project.all.order(:name) : current_user.projects.order(:name), member_label: Proc.new {|x| "#{x.name} / #{x.url}"}, include_blank: false
  .row
    .small-10.medium-6.columns= f.input :tickettype, as: :select, include_blank: false
  .row
    .small-10.medium-8.columns
      = f.input :user_id, as: :hidden, input_html: {value: current_user.id}
  .row
    .small-10.medium-6.columns
      = f.input :name, label: 'So, what\'s the issue?', hint: 'Enter a short description of the problem, feature request or question)'
  .row
    .small-10.medium-8.columns
      = f.input :description, label: 'Give a longer description of the issue here.', hint: 'Please be descriptive and indicate what you want or expect to happen, and what actually is happening.'
  .row
    .small-10.medium-6.columns
      = f.input :urgency, as: :select, collection: [["not a big deal, but would be nice to get this done", 0 ], ["would really love this to happen soon", 1], ["this is really, really important", 2], ["HOLY SHIT DROP EVERYTHING IN YOUR LIFE AND FIX THIS NOW!!!!", 3]], include_blank: false
  .row
    .small-10.medium-6.columns
      = f.input :date_requested, as: :string ,  label: 'Please fix by:', input_html: {class: 'date_picker'}
  .row
    .small-10.medium-6.columns
      = f.input :relevant_url, label: 'If a web-related issue, please enter the URL you were trying to access.'
  .row
    .small-10.medium-6.columns
      = f.input :attachment, label: 'Add an attachment (PDF, document, etc.) to this ticket?', hint: 'If you are posting a screenshot, click the button below instead.'
  .row
    .small-10.medium-6.columns
      %fieldset
        %legend Screenshots
        = f.fields_for :screenshots do |ss|
          = ss.input :image 
        = f.link_to_add 'add a screenshot', :screenshots, class: [:button, :secondary, :small]
  .row
    .small-10.medium-6.columns
      = f.input :assigned, as: :select, collection: [['John W. Fail', 1]], label: 'Assign this ticket/task to:', include_blank: false
  - unless @ticket.new_record?
    .row
      .small-10.medium-4.columns
        = f.input :status, as: :select, collection: [['new', 0], ['accepted', 1], ['closed', 2], ['reopened', 3], ['awaiting feedback', 4]], include_blank: false
    .row
      .small-10.medium-4.columns
        = f.input :resolution, as: :select, collection: [['open', 0], ['resolved', 1], ['invalid', 2], ['not applicable', 3], ['duplicate', 4]], include_blank: false        
  .row
    .small-10.medium-6.columns
      = f.submit 'Submit', class: [:button ]

= content_for :jquery do  
  :plain
    $('.date_picker').fdatepicker({ format: 'yyyy-mm-dd'});
    $('#ticket_project_id').change(function() {
      $("#ticket_assigned_id").html(new Option('John W. Fail', 1));
      $.ajax({
         url: "/projects/" + $(this).val() + "/users",
         type: 'GET',
         async: true,
         dataType: "json",
         error: function(XMLHttpRequest, errorTextStatus, error){
                    alert("Failed: "+ errorTextStatus+" ;"+error);
                },
         success: function(data){
            // here we iterate the json result
            //alert('data is ' + data[1].name);
           
            for(var i in data)
            {
              var id = data[i].id;
              var title = data[i].name;
     
              $("#ticket_assigned_id").append(new Option(title, id));
          }        

         }
      });
    });
