.row
  .small-12.columns
    %h1= @ticket.project.name

    
.row
  .small-12.columns
    .callout.primary
      %h2
        = "##{@ticket.id.to_s}: #{@ticket.name}"
        - if current_user.has_role? :admin
          = link_to 'edit', edit_ticket_path(@ticket), class: [:tiny, :button, :secondary]
      %ul.horizontal.menu
        %li
          %span.label{class: @ticket.tickettype_id == 1 ? :alert : (@ticket.tickettype_id == 2 ? :success : :secondary)}= @ticket.tickettype.name
          %span.label{class: @ticket.status_class}= @ticket.status_line
          %span.label{class: @ticket.resolution_class}= @ticket.resolution_line
          %span.label{class: @ticket.urgency >= 3  ? :alert : false}= @ticket.urgency_line
        
      .ticket_text
        = simple_format(@ticket.description)
      - unless @ticket.screenshots.empty?
        %ul.horizontal.menu
          - @ticket.screenshots.each do |ss|
            %li= link_to image_tag(ss.image.url(:box)), ss.image.url, target: :_blank
      .issuer
        %span.name
          submitted by
          = @ticket.user.name
        %span.date=  @ticket.created_at.strftime('%d %B %Y %H:%M')
- if @ticket.project.users.include?(current_user) || current_user.has_role?(:admin)
  .row
    .small-10.medium-9.columns#quick_edit
      .callout.warning
        = semantic_form_for @ticket do |f|
          .row
            .small-10.medium-4.columns
              %span Urgency:
              = f.input :urgency, label: false, as: :select,  collection: [["not a big deal, but would be nice to get this done", 0 ], ["would really love this to happen soon", 1], ["this is really, really important", 2], ["HOLY SHIT DROP EVERYTHING IN YOUR LIFE AND FIX THIS NOW!!!!", 3]], include_blank: false
            .small-10.medium-4.columns
              %span Status:
              = f.input :status, as: :select, collection: [['new', 0], ['accepted', 1], ['closed', 2], ['reopened', 3]], include_blank: false, label: false
            .small-10.medium-4.columns
              %span Resolution:
              = f.input :resolution, as: :select, collection: [['open', 0], ['resolved', 1], ['invalid', 2], ['not applicable', 3], ['duplicate', 4]], include_blank: false,label: false  
            .small-12.columns
              = f.input :system_call, as: :string, input_html: {value: 1}
              = f.input :send_email, as: :boolean, label: 'notify ticketholder of changes via email'
              = f.submit 'Update', class: [:button, :tiny]
- unless @ticket.comments.blank?
  .comments_index
    - @ticket.comments.sort_by(&:created_at).each do |comment|
      .row.comment{class: comment.is_system == true ? :system : false }
        .small-12.columns
          .entry{class: [comment.class.to_s.downcase, comment == @ticket.comments.sort_by(&:created_at).last ? :last : false]}
            .row
              .sma11-12.medium-8.columns.end
                .row
                  .small-2.columns
                    = link_to image_tag(comment.user.avatar.url(:box)), comment.user, target: :_blank, class: :comment_avatar
                  .small-10.columns
                    .comment_type
                      - if comment.is_system == true
                        = comment.user.name + " edited this ticket"
                      - else
                        = comment.user.name + " says...."
                    %small.date
                      %em= l comment.created_at, format: :long
                    .comment_content
                      %p= simple_format comment.description
#comment_index
  .row
    .small-12.medium-8.columns.end
      .row
        .small-2.columns
          = image_tag current_user.avatar.url(:box)
        
          %p.small= link_to 'edit profile', edit_user_path(current_user), class: [:button, :tiny, :secondary, :round]
        .small-10.columns
          %h3 Comment

          = semantic_form_for [ @ticket,  @comment = @ticket.comments.build(user: current_user)], html: { multipart: true, :"data-abide" => '' } do |f|
            = f.input :user_id, as: :hidden, input_html: {value: current_user.id}
            = f.input :description, :label => false, input_html: {:required => '', id: :comment_input_textarea}
            = f.input :image, :label => t(:attach_image_to_comment)
            = f.input :attachment, :label => t(:attach_attachment_to_comment)
            = f.input :send_email, as: :boolean,  label: 'Send an email notifiying that this comment was posted to ticket owner'
            = f.submit 'Save', :class => [:button, :round]
    
  
- if can? :edit, @ticket
  = link_to 'Edit', edit_ticket_path(@ticket), class: [:button, :small]

= link_to 'Back', tickets_path, class: [:button, :small, :secondary]
