.row.ticket_heading
  .small-12.columns
    - if @ticket.project.icon?
      .float-left= image_tag @ticket.project.icon.url(:thumb).gsub(/development/, 'production')
    %h1.ticket_header

      = link_to @ticket.project.name, {controller: :projects, action: :show, id: @ticket.project, opened: true}

    .row
      .small-10.medium-2.columns
        - unless @ticket.project.github_repo.blank?
          = link_to fa_icon('github') + " View on GitHub", "https://github.com/#{@ticket.project.github_user}/#{@ticket.project.github_repo}", target: :_blank, class: [:button, :tiny, :hollow, :github]
      .small-10.medium-8.columns.end
        %small
          = pluralize(@ticket.project.tickets.opened.size.to_s, 'open ticket')
          out of
          = @ticket.project.tickets.size.to_s
          total
        .progress{role: :progressbar, tabindex: 0, :'aria-valuenow' => @progress_project.to_s, class: (@progress_project <= 10 ? :alert : (@progress_project <= 45) ? :warning : (@progress_project <= 75 ? :secondary : (@progress_project <= 90 ? :primary : :success)))}
          
          .progress-meter{style: "width: #{@progress_project}%"}
    
.row
  .small-12.columns
    .callout.primary
      %h2
        = "##{@ticket.id.to_s}: #{@ticket.name}"
        - if current_user.has_role? :admin
          = link_to 'edit', edit_ticket_path(@ticket), class: [:tiny, :button, :secondary]
      %ul.horizontal.menu
        %li
          %span.label{class: @ticket.tickettype_id == 1 ? :alert : (@ticket.tickettype_id == 2 ? :success : :secondary)}= @ticket.tickettype.name
          %span.label{class: @ticket.status_class}= @ticket.status_line
          %span.label{class: @ticket.resolution_class}= @ticket.resolution_line
          %span.label{class: @ticket.urgency_class}= @ticket.urgency_line
        
      .ticket_text
        = simple_format(@ticket.description)
      - unless @ticket.screenshots.empty?
        %ul.horizontal.menu
          - @ticket.screenshots.each do |ss|
            %li= link_to image_tag(ss.image.url(:box)), ss.image.url, target: :_blank
      .issuer
        %span.name
          submitted by
          = @ticket.user.name
        %span.date=  @ticket.created_at.strftime('%d %B %Y %H:%M')
      .assigned{class: @ticket.assigned == current_user ? :my_ticket : false}
        assigned to
        = @ticket.assigned.name
- if @ticket.project.users.include?(current_user) || current_user.has_role?(:admin)
  .row
    .small-10.medium-12.large-10.columns#quick_edit
      .callout.warning
        %h4 Change ticket status without commenting
        %p
          %small If you would like to change these statuses AND leave a comment at the same time, do so at the bottom of this page.
        = semantic_form_for @ticket do |f|
          .row
            .small-10.medium-6.large-3.columns
              %span Urgency:
              = f.input :urgency, label: false, as: :select,  collection: [["not a big deal, but would be nice to get this done", 0 ], ["would really love this to happen soon", 1], ["this is really, really important", 2], ["HOLY SHIT DROP EVERYTHING IN YOUR LIFE AND FIX THIS NOW!!!!", 3]], include_blank: false
            .small-10.medium-6.large-3.columns
              %span Status:
              = f.input :status, as: :select, collection: [['new', 0], ['accepted', 1], ['closed', 2], ['reopened', 3], ['awaiting feedback', 4]], include_blank: false, label: false
            .small-10.medium-6.large-3.columns
              %span Resolution:
              = f.input :resolution, as: :select, collection: [['open', 0], ['resolved', 1], ['invalid', 2], ['not applicable', 3], ['duplicate', 4]], include_blank: false,label: false  
            .small-10.medium-6.large-3.columns
              %span Re-assign to:
              = f.input :assigned, as: :select, collection: [@ticket.project.users.order(:name), User.first].flatten, include_blank: false, label: false
              
            .small-12.columns
              = f.input :system_call, as: :hidden, input_html: {value: 1}
              = f.input :send_email, as: :boolean, label: 'notify ticketholder of changes via email'
              = f.submit 'Update', class: [:button, :tiny]
- unless @ticket.comments.blank?
  .comments_index
    - @ticket.comments.sort_by(&:created_at).each do |comment|
      .row.comment{class: comment.is_system == true ? :system : false }
        .small-12.columns
          .entry{class: [comment.class.to_s.downcase, comment == @ticket.comments.sort_by(&:created_at).last ? :last : false]}
            .row
              .sma11-12.medium-8.columns.end
                .row
                  .small-2.columns
                    = link_to image_tag(comment.user.avatar.url(:box)), comment.user, target: :_blank, class: :comment_avatar
                  .small-10.columns
                    .comment_type
                      - if comment.is_system == true
                        = comment.user.name + " edited this ticket"
                      - else
                        = comment.user.name + " says...."
                    %small.date
                      %em= l comment.created_at, format: :long
                    .comment_content
                      %p= simple_format comment.description
                      - if comment.screenshot?
                        %p= link_to image_tag(comment.screenshot.url(:box).gsub(/development/, 'production')), '#', :"data-open" => "screenshot_#{comment.id.to_s}"
                        .reveal{id: "screenshot_#{comment.id.to_s}", :'data-reveal' => ''}
                          = image_tag comment.screenshot.url.gsub(/development/, 'production')
                          %button.close-button{:"aria-label" => "Close modal", :"data-close" => "", :type => "button"}
                            %span{:"aria-hidden" => "true"} &times;
                      - if comment.attachment?
                        %p= link_to 'Download attachment', comment.attachment.url, class: [:button, :secondary, :small]
                    - unless comment.commit_hash.blank?
                      .comment_hash
                        %strong
                          %em
                            Fixed in commit
                            = link_to comment.commit_hash,  "https://github.com/#{@ticket.project.github_user}/#{@ticket.project.github_repo}/commit/#{comment.commit_hash}", target: :blank
#comment_index
  .row
    .small-12.medium-8.columns.end
      .row
        .small-2.columns
          = image_tag current_user.avatar.url(:box)
        
          %p.small= link_to 'edit profile', edit_user_path(current_user), class: [:button, :tiny, :secondary, :round]
        .small-10.columns
          %h3 Comment

          -#= semantic_form_for [ @ticket,  @comment = @ticket.comments.build(user: current_user)], html: { multipart: true, :"data-abide" => '' } do |f|
          = semantic_form_for @ticket, html: { multipart: true, :"data-abide" => '' } do |f|
            = f.fields_for :comments,  @ticket.comments.build(user: current_user) do |ff|

              = ff.input :user_id, as: :hidden, input_html: {value: current_user.id}
              = ff.input :description, :label => false, input_html: {:required => '', id: :comment_input_textarea}
              = ff.input :screenshot,  label: 'Attach image/screenshot to comment?'
              = ff.input :attachment, :label => 'Attach PDF or other file to comment?'
              - unless @ticket.project.github_repo.blank?
                = ff.input :commit_hash, label: 'GitHub commit hash', hint: 'optional!'
            .row
              .small-12.columns Change status with this comment:
            .small-10.medium-4.columns
              %span Urgency:
              = f.input :urgency, label: false, as: :select,  collection: [["not a big deal, but would be nice to get this done", 0 ], ["would really love this to happen soon", 1], ["this is really, really important", 2], ["HOLY SHIT DROP EVERYTHING IN YOUR LIFE AND FIX THIS NOW!!!!", 3]], include_blank: false
            .small-10.medium-4.columns
              %span Status:
              = f.input :status, as: :select, collection: [['new', 0], ['accepted', 1], ['closed', 2], ['reopened', 3], ['awaiting feedback', 4]], include_blank: false, label: false
            .small-10.medium-4.columns
              %span Resolution:
              = f.input :resolution, as: :select, collection: [['open', 0], ['resolved', 1], ['invalid', 2], ['not applicable', 3], ['duplicate', 4]], include_blank: false,label: false  
            .small-12.medium-5.columns
              = f.input :assigned, as: :select, collection: [@ticket.project.users.order(:name), User.first].flatten, include_blank: false, label: 'Re-assign ticket to:', hint: 'Re-assigning a ticket will notify that person, via email'
            .small-12.columns
              = f.input :system_call, as: :hidden, input_html: {value: 1}
              = f.input :send_email, as: :boolean, label: "notify ticket creator (#{@ticket.user.name})  of this comment, via email"
              - unless [@ticket.project.users, User.first].flatten.uniq.delete_if{|x| x == current_user}.delete_if{|y| y == @ticket.user}.empty?
                = f.input :notification_ids, as: :check_boxes, collection: [@ticket.project.users, User.first].flatten.uniq.delete_if{|x| x == current_user}.delete_if{|y| y == @ticket.user}, label: 'Also send an email notification to:'
              -#= ff.input :send_email, as: :boolean,  label: 'Send an email notifiying that this comment was posted to ticket owner'
            .small-12.columns= f.submit 'Save', :class => [:button, :round]
    
  
- if can? :edit, @ticket
  = link_to 'Edit', edit_ticket_path(@ticket), class: [:button, :small]

= link_to 'Back', tickets_path, class: [:button, :small, :secondary]
